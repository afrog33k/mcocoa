https://home.comcast.net/~jesse98/public/mcocoa_docs/namespaces.html

set a symbolic breakpoint at -[NSException raise]

http://developer.apple.com/techpubs/macosx/Cocoa/ProgrammingTopics/JavaBridge/JavaBridge.html

* Work on examples:
	- add some comments
	- remove natty
	- update the mcocoa make file
	- update building and maybe readme
* Add an animating-views icon.
* Release checklist:
	- make sure unit tests work
	- review tar target
	- sync example version numbers with the lib
	- make sure everything is checked in
	- use svn log -r 1:HEAD > CHANGE_LOG 
	- update CHANGES file
	- update version number
	- remove build_num file 
	- update libraries
	- install
	- upload new html docs
	- update README and wiki
	- delete the example bin directories
	- upload a new version to googlecode
	- send an announcement
	- make sure everything is checked in

* Probably want all init methods to return their declaring type (if the original
   returns id).
* Generate externs:
	- identify them all (name and file)
	- create a little native app to evaluate them
	- use the output of the native file to generate an Externs.cs file
	- add comments to identify the original file
* Get mandel-zoomer doing a bit better with gendarme.
* Would be nice to enable CLSCompliant. One problem is that a lot of cocoa
   methods use unsigned typed. Perhaps we can fix this by generating signed
   overloads and decorating the original versions with CLSCompliant.
* Might want a white list for out arguments (can't tell from the headers if they
  are supposed to be arrays or not, see NSBezierPath.getLineDashCountPhase)
* Work on Natty:
	- prefs could be used to save fonts, colors
	- need to support stdin (important for install or removing files
	  generated under sudo)
	- make files should default to RELEASE
	- would be nice to support nant
	- might be neat to have a lookup error command
* Probably should add interfaces for protocols.
* Release checklist:
	- search for TODO (everywhere)
	- run gendarme
	- make sure unit tests work
	- make sure examples work in debug
	- make sure examples work in release
	- review tar target
	- make sure everything is checked in
	- use svn log -r 1:HEAD > CHANGE_LOG
	- update CHANGES file
	- update version number
	- sync example version numbers with the lib
	- remove build_num file 
	- update libraries
	- install
	- upload new html docs
	- update README and wiki
	- delete the example bin directories
	- upload a new version to googlecode
	- send an announcement
	- make sure everything is checked in
