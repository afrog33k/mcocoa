BUILDING

You'll need to install the mobjc library which you can find at
<http://code.google.com/p/mobjc/>. Once you've done that navigate
to the mcocoa directory with a terminal and and type 'make generate' to
generate the wrapper classes. Then you can type 'make run-animating-views' 
to run the animating views example and 'make run-natty' to run the natty 
example (which is a gui wrapper for make files).

INSTALLING

To install type `sudo make install`, to uninstall type `sudo make uninstall`.

By default the libraries are installed into /usr/local/lib. You can 
change this with a command like this: `make INSTALL_DIR=/tmp install`.

Typically you'd copy the libraries out of /usr/local/lib into your
project's bin directory with a make target like this:

update-libraries:
	cp `pkg-config --variable=Libraries mobjc` bin
	cp `pkg-config --variable=Libraries mcocoa` bin
	
You'll also need to ensure that pkg-config can find the pc files in /usr/lib. To 
do this you can add a line like export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/local/lib/pkgconfig" 
to your ~/.bash_profile script.
	
USAGE

In general using mcocoa is very much like using Cocoa natively with reference
counting enabled. In particular memory management is the same so if you call a 
method whose name begins with "alloc" or "new" or contains "copy" then you are 
responsible for releasing its reference count.

The Cocoa wrappers are generated when you build mcocoa. The wrappers contain
all of the Cocoa methods except for a few which are variadic or use function pointers.
The methods have the same name as the native methods except colons are replaced
with underscores and the last colon is dropped (so "archiveRootObject:toFile:" becomes
"archiveRootObject_toFile"). If the name conflicts with a C# keyword it is appended
with an underscore.

See <http://code.google.com/p/mcocoa/w/list> for more usage notes and API
References.

jesjones@mindspring.com
